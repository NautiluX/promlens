apiVersion: v1
kind: Namespace
metadata:
  name: promlens
spec:
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: promlens
  name: promlens
  namespace: promlens
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: promlens
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: promlens
    spec:
      containers:
      - image: quay.io/mdewald/promlens
        imagePullPolicy: Always
        name: promlens
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        command: ["/bin/promlens", "--web.proxy-prometheus-url=https://prometheus-k8s.openshift-monitoring.svc:9091"]
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: promlens
  name: promlens
  namespace: promlens
spec:
  ports:
  - port: 8080
  selector:
    app: promlens
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: promlens
  name: promlens
  namespace: promlens
spec:
  port:
    targetPort: 8080
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: promlens
    weight: 100
  wildcardPolicy: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespacereader
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespacereader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespacereader
subjects:
- kind: ServiceAccount
  name: default
  namespace: promlens
